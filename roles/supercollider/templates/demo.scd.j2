{% raw %}//s.waitForBoot{ {SinOsc.ar([400, 404])}.play } {% endraw %}

{% raw %}s.waitForBoot{ {{WhiteNoise.ar}.dup(12).mean.dup * 0.5}.play } {% endraw %}

// MIDIIn.connect;
// s.waitForBoot{ 
(
//SynthDef("sik-goo", { |out, freq = 440, formfreq = 100, gate = 0.0, bwfreq = 800|
//    var x;
//    x = Formant.ar(
//        SinOsc.kr(0.02, 0, 10, freq),
//        formfreq,
//        bwfreq
//    );
//    x = EnvGen.kr(Env.adsr, gate, Latch.kr(gate, gate)) * x;
//    Out.ar(out, x);
//}).add;
//)
//
// x = Synth("sik-goo");
//set the action:
//(
//~noteOn = {arg src, chan, num, vel;
//    x.set(\freq, num.midicps / 4.0);
//    x.set(\gate, vel / 200 );
//    x.set(\formfreq, vel / 127 * 1000);
//};
//MIDIIn.addFuncTo(\noteOn, ~noteOn);
//
//~noteOff = { arg src,chan,num,vel;
//    x.set(\gate, 0.0);
//};
//MIDIIn.addFuncTo(\noteOff, ~noteOff);
//
//~bend = { arg src,chan,val;
//    //(val * 0.048828125).postln;
//    x.set(\bwfreq, val * 0.048828125 );
//};
//MIDIIn.addFuncTo(\bend, ~bend);
//)
//
////cleanup
//MIDIIn.removeFuncFrom(\noteOn, ~noteOn);
//MIDIIn.removeFuncFrom(\noteOff, ~noteOff);
//MIDIIn.removeFuncFrom(\bend, ~bend);
// }
